[build-system]
requires = ["hatchling", "hatch-requirements-txt"]
build-backend = "hatchling.build"

[project]
name = "swift-api-graphql"
dynamic = ["version", "dependencies"]
description = ""
readme = "README.md"
requires-python = ">=3.10"
license = "Apache-2.0"
keywords = []
authors = [
  { name = "vkantchev", email = "vkantchev@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]


[project.urls]
Documentation = "https://github.com/vkantchev/swift-api-graphql#readme"
Issues = "https://github.com/vkantchev/swift-api-graphql/issues"
Source = "https://github.com/vkantchev/swift-api-graphql"

[[tool.hatch.envs.default.matrix]]
python = ["3.12", "3.11", "3.10"]

[tool.hatch.version]
path = "src/swift_api_graphql/__about__.py"

[tool.hatch.metadata.hooks.requirements_txt]
files = ["requirements.txt"]

[tool.hatch.envs.default]
dependencies = ["pytest", "coverage[toml]"]

[tool.hatch.envs.default.scripts]
test = "pytest"
test-cov = "coverage run -m pytest"
cov-report = ["coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[tool.coverage.run]
source_pkgs = ["swift_api_graphql"]
branch = true
parallel = true
omit = ["src/swift_api_graphql/__about__.py"]

[tool.coverage.paths]
swift_api_graphql = ["src/swift_api_graphql", "*/swift-api-graphql/src/swift_api_graphql"]
test = ["test", "*/swift-api-graphql/test"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
line-length = 200

[tool.pylint.format]
max-line-length = 200
